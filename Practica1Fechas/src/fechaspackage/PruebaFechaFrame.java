/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * PruebaFechaFrame.java
 *
 * Created on Aug 26, 2011, 10:55:26 PM
 */

package fechaspackage;

/**
 *
 * @author Fernando Carbajal
 */
public class PruebaFechaFrame extends javax.swing.JFrame {

    /** Creates new form PruebaFechaFrame */
    public PruebaFechaFrame() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        actionBox = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        comboDay = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        comboMonth = new javax.swing.JComboBox();
        txtYear = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        dateResult = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        dateResultInt = new javax.swing.JLabel();
        txtYear2 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        comboDay2 = new javax.swing.JComboBox();
        jLabel9 = new javax.swing.JLabel();
        comboMonth2 = new javax.swing.JComboBox();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        txtMonth = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        txtMonth2 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Practica 1 Lenguajes de Programación");

        actionBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Fecha sin parámetros", "Fecha con tres parámetros enteros", "Fecha con mes como cadena", "Determinar cuál fecha es mayor" }));
        actionBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actionBoxActionPerformed(evt);
            }
        });

        jLabel1.setText("Seleccione la operación a realizar");

        jLabel2.setText("Fecha 1");

        comboDay.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        comboDay.setEnabled(false);

        jLabel3.setText("Dia");

        jLabel4.setText("Mes");

        jLabel5.setText("Año");

        comboMonth.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" }));
        comboMonth.setEnabled(false);

        txtYear.setText("1950");
        txtYear.setEnabled(false);

        jLabel6.setText("Fecha resultante:");

        dateResult.setFont(new java.awt.Font("Tahoma", 2, 14));
        dateResult.setText("sin fecha");

        jButton1.setText("Calcular");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        dateResultInt.setFont(new java.awt.Font("Tahoma", 2, 14));
        dateResultInt.setText("sin fecha");

        txtYear2.setText("1950");
        txtYear2.setEnabled(false);

        jLabel7.setText("Mes");

        jLabel8.setText("Dia");

        comboDay2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        comboDay2.setEnabled(false);

        jLabel9.setText("Fecha 2");

        comboMonth2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" }));
        comboMonth2.setEnabled(false);

        jLabel10.setText("Año");

        jLabel11.setText("Mes");

        txtMonth.setText("enero");

        jLabel12.setText("Mes");

        txtMonth2.setText("enero");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(actionBox, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(35, 35, 35)
                                .addComponent(jLabel4)
                                .addGap(26, 26, 26)
                                .addComponent(jLabel5))
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 155, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(comboDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addComponent(jLabel11))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(comboMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtYear))))
                            .addComponent(txtMonth))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(comboDay2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(comboMonth2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtYear2))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addGap(35, 35, 35)
                                .addComponent(jLabel7)
                                .addGap(26, 26, 26)
                                .addComponent(jLabel10))
                            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, 155, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(57, 57, 57)
                                .addComponent(jLabel12))
                            .addComponent(txtMonth2))
                        .addGap(204, 204, 204))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addContainerGap(713, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(dateResult, javax.swing.GroupLayout.DEFAULT_SIZE, 777, Short.MAX_VALUE)
                        .addGap(21, 21, 21))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(dateResultInt, javax.swing.GroupLayout.PREFERRED_SIZE, 371, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addContainerGap(727, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5))
                                .addGap(1, 1, 1)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(comboDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(comboMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(actionBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addGap(3, 3, 3)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(jLabel7)
                            .addComponent(jLabel10))
                        .addGap(1, 1, 1)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(comboDay2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(comboMonth2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtYear2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtMonth2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(70, 70, 70)
                .addComponent(jButton1)
                .addGap(183, 183, 183)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(dateResult)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(dateResultInt)
                .addGap(17, 17, 17))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Habilita/Deshabilita campos dependiendo del index seleccionado.
     * @param evt evento
     */
    private void actionBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actionBoxActionPerformed
        // TODO add your handling code here:
        
        DisableElements();  // deshabilita todo cada vez que se mueva la selección
        
        // check the selection to enable/disable fields
        switch(actionBox.getSelectedIndex())
        {            
            case 0:     // fecha sin parámetros                
                break;
                
            case 1:     // fecha con parámetros enteros
                comboMonth.setEnabled(true);
                comboDay.setEnabled(true);
                txtYear.setEnabled(true);
                break;
                
            case 2:     // fecha con el mes como string
                txtMonth.setEnabled(true);
                comboDay.setEnabled(true);
                txtYear.setEnabled(true);
                break;
                
            case 3:   // checar si dos fechas son iguales
                comboMonth.setEnabled(true);
                comboDay.setEnabled(true);
                txtYear.setEnabled(true);
                comboMonth2.setEnabled(true);
                comboDay2.setEnabled(true);
                txtYear2.setEnabled(true);
                
                break;
            
        }
    }//GEN-LAST:event_actionBoxActionPerformed

    /**
     * Revisa la opción seleccionada y los campos adecuados a ésta.
     * Después valida 
     * @param evt 
     */
    
private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
// TODO add your handling code here:
    int opc = actionBox.getSelectedIndex();
    switch(opc)
    {
        case 0:     // fecha sin parámetros
            if(ValidateDate(opc))
            {
                Fecha date = new Fecha();
                PrintDates(date, true);
            }
            break;
            
        case 1:     // fecha con números enteros
            if(ValidateDate(opc))
            {
                int day = comboDay.getSelectedIndex() + 1;     // +1 xq el index comienza desde 0
                int month = comboMonth.getSelectedIndex() + 1;     // +1 xq el index comienza desde 0
                String yearStr = txtYear.getText();
                int year = Integer.parseInt(yearStr);                     
                Fecha date = new Fecha(day, month, year);
                PrintDates(date, true);
            }
            else 
                PrintDates(null, false);
            
            break;
            
        case 2:     // fecha con el mes como string
            if(ValidateDate(opc))
            {
                String monthStr = txtMonth.getText();                                
                int monthInt = Fecha.MonthToInt(monthStr);
                
                if(monthInt == 0)   // si no es un mes válido, imprime inválido y rompe
                {
                    PrintDates(null, false);
                    break;                        
                }
                
                int day = comboDay.getSelectedIndex() + 1;     // +1 xq el index comienza desde 0                
                String yearStr = txtYear.getText();
                int year = Integer.parseInt(yearStr);                     
                Fecha date = new Fecha(day, monthInt, year);
                PrintDates(date, true);            
            }
            
            else // fecha invalida
                PrintDates(null, false);
            break;
                        
        case 3:                     // compare dates
            if(ValidateDate(opc))
            {
                int day = comboDay.getSelectedIndex() + 1;     // +1 xq el index comienza desde 0
                int month = comboMonth.getSelectedIndex() + 1;     // +1 xq el index comienza desde 0
                String yearStr = txtYear.getText();
                int year = Integer.parseInt(yearStr);                     
                Fecha date = new Fecha(day, month, year);
                
                int day2 = comboDay2.getSelectedIndex() + 1;     // +1 xq el index comienza desde 0
                int month2 = comboMonth2.getSelectedIndex() + 1;     // +1 xq el index comienza desde 0
                String yearStr2 = txtYear2.getText();
                int year2 = Integer.parseInt(yearStr2);                     
                Fecha date2 = new Fecha(day2, month2, year2);
                
                if(date.CompareDates(date2))
                {
                    dateResult.setText("La primera fecha es mayor");
                }
                else
                {
                    dateResult.setText("La segunda fecha es mayor");
                }
                
                dateResultInt.setText("Sin fecha");
            }
            else 
                PrintDates(null, false);
            break;
        
    }
    
   
    
}//GEN-LAST:event_jButton1ActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {                
                new PruebaFechaFrame().setVisible(true);
            }
        });
    }
    
    /**
     * Imprime las fechas
     * @param date objeto Fecha a imprimir
     * @param valid es fecha válida?
     */
    public void PrintDates(Fecha date, boolean valid)
    {
        if(valid)
        {
            dateResult.setText(date.FechaToString());
            dateResultInt.setText(date.FechaIntToString());
        }
        else
        {
            dateResult.setText("Fecha no válida");
            dateResultInt.setText("Fecha no válida");
        }
    }
    
    
    /**
     * Valida los datos que recoge como fechas
     * @param opc indica qué validación hacer
     * @return validDate determina si es una fecha válida
     */
    public boolean ValidateDate(int opc)
     {
         boolean validDate = true;                  
         
         int year, year2;
         
         switch(opc)
         {
             case 0:    // fecha sin parámetros -> no hay nada que checar
                 break;
             case 1:    // fecha con números enteros
             case 2:    // fecha con un string
                 try    // checa si el año se pudo parsear
                 {
                     String yearStr = txtYear.getText();
                     year = Integer.parseInt(yearStr);                                          
                 }
                 catch(NumberFormatException ex)
                 {                    
                    validDate = false;
                    break;
                 }
                 
                 if(year < 1)       // no se aceptan años negativos
                     validDate = false;
                 
                 break;                                               
                 
             case 3:            // validar dos fechas
                 try    // checa si el año se pudo parsear
                 {
                     String yearStr = txtYear.getText();
                     year = Integer.parseInt(yearStr);                                          
                     String yearStr2 = txtYear2.getText();
                     year2 = Integer.parseInt(yearStr2);
                 }
                 catch(NumberFormatException ex)
                 {                    
                    validDate = false;
                    break;
                 }
                 
                 if(year < 1 || year2 < 1)       // no se aceptan años negativos
                     validDate = false;
                 
                 break;                                                                
         }
         
         // case: negative numbers
         
         
         // case: not valid dates like feb 20 (check for bisiesto)
         
         return validDate;
     }
    
    /**
     * Deshabilita todos los elementos gráficos para limitar al usuario
     */
    
    public void DisableElements()
    {
        comboMonth.setEnabled(false);
        comboDay.setEnabled(false);
        txtYear.setEnabled(false);
        
        comboMonth2.setEnabled(false);
        comboDay2.setEnabled(false);
        txtYear2.setEnabled(false);
        
        txtMonth.setEnabled(false);
        txtMonth2.setEnabled(false);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox actionBox;
    private javax.swing.JComboBox comboDay;
    private javax.swing.JComboBox comboDay2;
    private javax.swing.JComboBox comboMonth;
    private javax.swing.JComboBox comboMonth2;
    private javax.swing.JLabel dateResult;
    private javax.swing.JLabel dateResultInt;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField txtMonth;
    private javax.swing.JTextField txtMonth2;
    private javax.swing.JTextField txtYear;
    private javax.swing.JTextField txtYear2;
    // End of variables declaration//GEN-END:variables

}
